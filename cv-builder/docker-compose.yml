services:
  flask-app:
    build: .
    container_name: flask-app
    ports:
      - "5000:5000"
    environment:
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - redis
      - celery-worker
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:6.2
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  celery-worker:
    build: .
    container_name: celery-worker
    command: celery -A tasks worker --concurrency=4 --loglevel=INFO
    environment:
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - redis

  react-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: react-app
    expose:
      - "80"
    ports:
      - "3000:80"

  nginx-proxy:
    build:
      context: ./nginx-proxy
      dockerfile: Dockerfile
    container_name: nginx-proxy
    ports:
      - "443:443"
      - "80:80"
    depends_on:
      - flask-app
      - react-app

  frontend:
    build: ./cv-builder-frontend
    volumes:
      - ./cv-builder-frontend:/app
    ports:
      - "3000:3000"

  backend:
    build: ./cv-builder-backend
    volumes:
      - ./cv-builder-backend:/app
    ports:
      - "5000:5000"

volumes:
  redis_data:
